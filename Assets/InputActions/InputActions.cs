//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/InputActions/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerControllerScheme"",
            ""id"": ""f54c50a1-167f-48ce-a355-1ed719d8b850"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""0f2fe7cc-bcec-4cf8-b70e-8bb2a02a1db2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightAnalog"",
                    ""type"": ""Value"",
                    ""id"": ""7c23cbe6-c902-49db-a510-51ef80392131"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6c22f288-811a-4faa-bab6-f50668fe229b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hook"",
                    ""type"": ""Button"",
                    ""id"": ""b10c0226-277c-44e1-97bd-06a748098908"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dig"",
                    ""type"": ""Button"",
                    ""id"": ""e583e465-6efc-46d3-9f51-b805c3f318c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lift"",
                    ""type"": ""Button"",
                    ""id"": ""7cb6aa02-f24f-44c7-90ae-d87fa5d3129f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ball"",
                    ""type"": ""Button"",
                    ""id"": ""fc9d472e-f5c0-45a9-a31d-f53b9d90939a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Glide"",
                    ""type"": ""Button"",
                    ""id"": ""ff83fce1-d111-4d03-8314-924f682a4836"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stomp"",
                    ""type"": ""Button"",
                    ""id"": ""3f403bce-e3f4-4bbf-8ff1-034c8705f2ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7616d310-19e5-4105-84a9-c1f3c710784c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""68243866-a821-40ae-b1fc-cad0d2fa48f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveObject"",
                    ""type"": ""Button"",
                    ""id"": ""e6946c52-094c-42d9-9243-57068fb691dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThrowObject"",
                    ""type"": ""Button"",
                    ""id"": ""8f2dafb7-f797-444d-aee1-dcbe01272419"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Prickle"",
                    ""type"": ""Button"",
                    ""id"": ""e5927f33-781a-401a-b55c-5117b535852f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""b6e1cf70-6202-4568-8f0d-9b3eafab211c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Diary"",
                    ""type"": ""Button"",
                    ""id"": ""645d2b80-9634-4454-b3f1-2d097ecd0f61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""92214a54-ab4d-4f69-a25d-69f45fbf8353"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""2d85f04f-a1e5-4958-819c-62471e0dd47f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""ba6c1789-c024-4228-9bce-4df87f4b8a7f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""c11b3550-0a27-4028-8b38-c114fae08f18"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""5cb42431-d5a6-46f0-9302-bce699e36f93"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3787e94f-e44e-4334-acb4-1e717c55cd64"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""98bd6946-21be-43d6-9ebc-9953268c53a2"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""cfb86f29-a7ab-4491-be02-265d3700fecf"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""61ab58c2-255f-4608-b1a0-7cf44826f42b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""8572cfaf-85b2-4467-9bc2-957afcac2b37"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""cfd07ac9-b0d9-41a5-aef8-1502c7a999cd"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""RightAnalog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d1728d8d-fc1e-4267-84f9-70af4089bc40"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdf82698-9267-4cfc-a199-164b569cee50"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee7f8480-4bd8-46c7-af00-e042af691c92"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Hook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6708f410-8efd-4baf-94c6-771f1667b6b5"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Hook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b879a3c-932a-4a64-971f-f2200e0e8367"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dig"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f02dcc22-3591-457d-8d84-ab45bf8e5e0a"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Dig"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98092be9-35e9-4669-95e8-5cbc32a6beab"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Lift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eae707d4-a85b-4eea-ba40-6d02acfb4eee"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Lift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbc7a594-1760-489b-9c90-19d79738dca1"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Ball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ee07830-60e7-4cd3-be7e-4bd7d434dd92"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Ball"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""660c18ed-91a3-4479-ae2f-2f83edab2d5c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Glide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7cbdee5-b0f5-4595-9490-37c9e1190ede"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Glide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0923af78-2302-48f6-ae93-713bf1d81613"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stomp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46af830b-45ae-4df3-8242-006dcae1b3e8"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Stomp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""260ab088-0f17-4b8e-8039-f8a199b2794c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e37ad8fe-0678-4ad6-9ed1-678a4b4efe53"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""191f1bf8-a5b2-433a-8916-456700960c28"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e032132-5ebf-4a7c-836a-ced86bc48405"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5f0a576-0f3c-45a6-b0b7-f1c97b41d3ff"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f297eac-48a9-4d61-b653-41004ffebf02"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""MoveObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdf663ab-93fe-4acd-824e-a4ca9f36abd1"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ThrowObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b45ad035-693a-44b5-b0d7-b4632cfc358c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""ThrowObject"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17e5ef03-7df6-481e-bf8b-886c6b352160"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Prickle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69123ee5-cd69-4f26-a9ef-bb3ea64a30a1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""M&k;MK"",
                    ""action"": ""Prickle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e0f7681-ca91-422c-80a8-4628e6c3ff3b"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5da15db8-6b67-4125-8447-c1c011425dad"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5b6ae5f-e899-4a4f-9d84-e67bdd1016ef"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Diary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""938e3a60-1276-43d9-85cf-3c78ddcfc5d1"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Diary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc15847a-243a-4b73-b38f-ad3caf75f355"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIControllerScheme"",
            ""id"": ""c134e8c5-6fe6-4977-ad88-ab881fc9dc87"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""3bb93f7b-511a-4dc9-8bdf-3b8a563026a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2f9b742b-4a59-4bcd-b088-30f743bb0c12"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""6ec1c384-b372-4572-ad06-8d4ac8c2e457"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""867f748c-df4b-48b4-90e1-b984cac5bfa8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cc8a1914-e128-402b-a8af-5c441fe5ad46"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""64e0ba2e-0e82-44c4-92b2-667a10fa3610"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9378a801-8546-44c4-9818-9914115d81de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""837f97a7-a41e-4372-b23f-f17e3fde0347"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""58c21987-a8ef-475d-bf4f-fb0aca7fd2e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2a5c4e2a-cd3c-4005-8d4a-75d96d45fdd1"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a4ca57c3-ab36-4777-8b3f-fb25aa05a4de"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5c3d3b03-43e7-48f6-9858-20b6002db8f8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c16ccbc8-db64-4df6-b7d4-960d20efff5a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""344f0457-b66c-4069-9947-f4ec1b459978"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""76bb6001-2f37-4244-910d-2627d9624825"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f4d4b4d6-a4a2-440c-ae9e-3cfe1c642864"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ab90bfce-bc36-4521-a244-ab35d60a28ab"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fd0f9b88-4b84-4e7f-9656-2ffa14629a04"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""be5b35d2-d15e-44b4-aefe-3e71b42b4085"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3a3ce4a2-22c7-469c-aa9d-fe5902d89efc"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d3645e5d-799d-4816-8c7f-c654cb398131"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4da204af-e159-4674-b0f0-f55d7e58bc77"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""031ec164-f3ec-493b-9bd2-e25477ac4469"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""f1db9311-8bb9-40de-84d5-d10518a58995"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""29db853f-fb23-4c79-92b5-960f08a9960d"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c52cfcfd-aade-46ae-b52f-0093e813b97d"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9c731dc9-edaa-4a67-9c2d-d6599da0fdd0"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c9ada7b0-78b3-419b-8320-c3d03a689cc0"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""45142605-51de-42e8-952d-f5022b23cd37"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dea1ff2a-73b1-4742-ac09-988477585449"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""934f3d11-a571-423d-9b62-73040f154647"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""425ea623-a2f8-4465-a5d7-0f338efad64e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""19caffb0-bb98-446d-858c-064ea89dfa5b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""63d7d78e-a458-4bb7-9d0f-17b1150bbddc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""be5b5605-546c-4c75-bf2c-a466dfc38b04"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69aaf14a-05c2-497f-9de7-d04d8f9123c0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""41301c23-1af4-4aa3-9c9b-120fc800307e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b134a282-d8a6-4824-833d-afc2ebcbe6a7"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MK"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb6aabb0-78c6-4967-bb42-110cf4a63e20"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92ef706d-764a-475f-956a-e1cfb97bc16a"",
                    ""path"": ""<Keyboard>/#(E)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""544f8d19-600a-4325-9ef7-d7d285cb354d"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a779fa9d-7fcc-4262-b563-128dfd04020f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70457e0b-bca6-444c-9dc9-8636fa970550"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a193d110-80a5-4d90-b455-1f135e9de215"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de9ba8a3-fedb-41af-845f-342e4c170315"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f085ead0-3a94-4374-89bc-6863c2883db1"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15bbae36-928f-4e83-b15d-aa98f7ca8892"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db5119f8-d11b-46f6-8989-cbad8a7d89bb"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e0a59da-94a8-4b43-aaa8-c179978ccdce"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55673cbc-f786-4e02-b2d2-c97c20f670a5"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""MK"",
            ""bindingGroup"": ""MK"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerControllerScheme
        m_PlayerControllerScheme = asset.FindActionMap("PlayerControllerScheme", throwIfNotFound: true);
        m_PlayerControllerScheme_Movement = m_PlayerControllerScheme.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControllerScheme_RightAnalog = m_PlayerControllerScheme.FindAction("RightAnalog", throwIfNotFound: true);
        m_PlayerControllerScheme_Jump = m_PlayerControllerScheme.FindAction("Jump", throwIfNotFound: true);
        m_PlayerControllerScheme_Hook = m_PlayerControllerScheme.FindAction("Hook", throwIfNotFound: true);
        m_PlayerControllerScheme_Dig = m_PlayerControllerScheme.FindAction("Dig", throwIfNotFound: true);
        m_PlayerControllerScheme_Lift = m_PlayerControllerScheme.FindAction("Lift", throwIfNotFound: true);
        m_PlayerControllerScheme_Ball = m_PlayerControllerScheme.FindAction("Ball", throwIfNotFound: true);
        m_PlayerControllerScheme_Glide = m_PlayerControllerScheme.FindAction("Glide", throwIfNotFound: true);
        m_PlayerControllerScheme_Stomp = m_PlayerControllerScheme.FindAction("Stomp", throwIfNotFound: true);
        m_PlayerControllerScheme_Dash = m_PlayerControllerScheme.FindAction("Dash", throwIfNotFound: true);
        m_PlayerControllerScheme_Interact = m_PlayerControllerScheme.FindAction("Interact", throwIfNotFound: true);
        m_PlayerControllerScheme_MoveObject = m_PlayerControllerScheme.FindAction("MoveObject", throwIfNotFound: true);
        m_PlayerControllerScheme_ThrowObject = m_PlayerControllerScheme.FindAction("ThrowObject", throwIfNotFound: true);
        m_PlayerControllerScheme_Prickle = m_PlayerControllerScheme.FindAction("Prickle", throwIfNotFound: true);
        m_PlayerControllerScheme_Menu = m_PlayerControllerScheme.FindAction("Menu", throwIfNotFound: true);
        m_PlayerControllerScheme_Diary = m_PlayerControllerScheme.FindAction("Diary", throwIfNotFound: true);
        // UIControllerScheme
        m_UIControllerScheme = asset.FindActionMap("UIControllerScheme", throwIfNotFound: true);
        m_UIControllerScheme_Exit = m_UIControllerScheme.FindAction("Exit", throwIfNotFound: true);
        m_UIControllerScheme_Navigate = m_UIControllerScheme.FindAction("Navigate", throwIfNotFound: true);
        m_UIControllerScheme_Submit = m_UIControllerScheme.FindAction("Submit", throwIfNotFound: true);
        m_UIControllerScheme_Cancel = m_UIControllerScheme.FindAction("Cancel", throwIfNotFound: true);
        m_UIControllerScheme_Point = m_UIControllerScheme.FindAction("Point", throwIfNotFound: true);
        m_UIControllerScheme_Click = m_UIControllerScheme.FindAction("Click", throwIfNotFound: true);
        m_UIControllerScheme_ScrollWheel = m_UIControllerScheme.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIControllerScheme_MiddleClick = m_UIControllerScheme.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIControllerScheme_RightClick = m_UIControllerScheme.FindAction("RightClick", throwIfNotFound: true);
        m_UIControllerScheme_TrackedDevicePosition = m_UIControllerScheme.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UIControllerScheme_TrackedDeviceOrientation = m_UIControllerScheme.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControllerScheme
    private readonly InputActionMap m_PlayerControllerScheme;
    private IPlayerControllerSchemeActions m_PlayerControllerSchemeActionsCallbackInterface;
    private readonly InputAction m_PlayerControllerScheme_Movement;
    private readonly InputAction m_PlayerControllerScheme_RightAnalog;
    private readonly InputAction m_PlayerControllerScheme_Jump;
    private readonly InputAction m_PlayerControllerScheme_Hook;
    private readonly InputAction m_PlayerControllerScheme_Dig;
    private readonly InputAction m_PlayerControllerScheme_Lift;
    private readonly InputAction m_PlayerControllerScheme_Ball;
    private readonly InputAction m_PlayerControllerScheme_Glide;
    private readonly InputAction m_PlayerControllerScheme_Stomp;
    private readonly InputAction m_PlayerControllerScheme_Dash;
    private readonly InputAction m_PlayerControllerScheme_Interact;
    private readonly InputAction m_PlayerControllerScheme_MoveObject;
    private readonly InputAction m_PlayerControllerScheme_ThrowObject;
    private readonly InputAction m_PlayerControllerScheme_Prickle;
    private readonly InputAction m_PlayerControllerScheme_Menu;
    private readonly InputAction m_PlayerControllerScheme_Diary;
    public struct PlayerControllerSchemeActions
    {
        private @InputActions m_Wrapper;
        public PlayerControllerSchemeActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerControllerScheme_Movement;
        public InputAction @RightAnalog => m_Wrapper.m_PlayerControllerScheme_RightAnalog;
        public InputAction @Jump => m_Wrapper.m_PlayerControllerScheme_Jump;
        public InputAction @Hook => m_Wrapper.m_PlayerControllerScheme_Hook;
        public InputAction @Dig => m_Wrapper.m_PlayerControllerScheme_Dig;
        public InputAction @Lift => m_Wrapper.m_PlayerControllerScheme_Lift;
        public InputAction @Ball => m_Wrapper.m_PlayerControllerScheme_Ball;
        public InputAction @Glide => m_Wrapper.m_PlayerControllerScheme_Glide;
        public InputAction @Stomp => m_Wrapper.m_PlayerControllerScheme_Stomp;
        public InputAction @Dash => m_Wrapper.m_PlayerControllerScheme_Dash;
        public InputAction @Interact => m_Wrapper.m_PlayerControllerScheme_Interact;
        public InputAction @MoveObject => m_Wrapper.m_PlayerControllerScheme_MoveObject;
        public InputAction @ThrowObject => m_Wrapper.m_PlayerControllerScheme_ThrowObject;
        public InputAction @Prickle => m_Wrapper.m_PlayerControllerScheme_Prickle;
        public InputAction @Menu => m_Wrapper.m_PlayerControllerScheme_Menu;
        public InputAction @Diary => m_Wrapper.m_PlayerControllerScheme_Diary;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControllerScheme; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControllerSchemeActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControllerSchemeActions instance)
        {
            if (m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMovement;
                @RightAnalog.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnRightAnalog;
                @RightAnalog.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnRightAnalog;
                @RightAnalog.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnRightAnalog;
                @Jump.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnJump;
                @Hook.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnHook;
                @Hook.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnHook;
                @Hook.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnHook;
                @Dig.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDig;
                @Dig.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDig;
                @Dig.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDig;
                @Lift.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnLift;
                @Lift.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnLift;
                @Lift.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnLift;
                @Ball.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnBall;
                @Ball.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnBall;
                @Ball.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnBall;
                @Glide.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnGlide;
                @Glide.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnGlide;
                @Glide.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnGlide;
                @Stomp.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnStomp;
                @Stomp.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnStomp;
                @Stomp.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnStomp;
                @Dash.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDash;
                @Interact.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnInteract;
                @MoveObject.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMoveObject;
                @MoveObject.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMoveObject;
                @MoveObject.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMoveObject;
                @ThrowObject.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnThrowObject;
                @ThrowObject.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnThrowObject;
                @ThrowObject.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnThrowObject;
                @Prickle.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnPrickle;
                @Prickle.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnPrickle;
                @Prickle.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnPrickle;
                @Menu.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnMenu;
                @Diary.started -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDiary;
                @Diary.performed -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDiary;
                @Diary.canceled -= m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface.OnDiary;
            }
            m_Wrapper.m_PlayerControllerSchemeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @RightAnalog.started += instance.OnRightAnalog;
                @RightAnalog.performed += instance.OnRightAnalog;
                @RightAnalog.canceled += instance.OnRightAnalog;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Hook.started += instance.OnHook;
                @Hook.performed += instance.OnHook;
                @Hook.canceled += instance.OnHook;
                @Dig.started += instance.OnDig;
                @Dig.performed += instance.OnDig;
                @Dig.canceled += instance.OnDig;
                @Lift.started += instance.OnLift;
                @Lift.performed += instance.OnLift;
                @Lift.canceled += instance.OnLift;
                @Ball.started += instance.OnBall;
                @Ball.performed += instance.OnBall;
                @Ball.canceled += instance.OnBall;
                @Glide.started += instance.OnGlide;
                @Glide.performed += instance.OnGlide;
                @Glide.canceled += instance.OnGlide;
                @Stomp.started += instance.OnStomp;
                @Stomp.performed += instance.OnStomp;
                @Stomp.canceled += instance.OnStomp;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @MoveObject.started += instance.OnMoveObject;
                @MoveObject.performed += instance.OnMoveObject;
                @MoveObject.canceled += instance.OnMoveObject;
                @ThrowObject.started += instance.OnThrowObject;
                @ThrowObject.performed += instance.OnThrowObject;
                @ThrowObject.canceled += instance.OnThrowObject;
                @Prickle.started += instance.OnPrickle;
                @Prickle.performed += instance.OnPrickle;
                @Prickle.canceled += instance.OnPrickle;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
                @Diary.started += instance.OnDiary;
                @Diary.performed += instance.OnDiary;
                @Diary.canceled += instance.OnDiary;
            }
        }
    }
    public PlayerControllerSchemeActions @PlayerControllerScheme => new PlayerControllerSchemeActions(this);

    // UIControllerScheme
    private readonly InputActionMap m_UIControllerScheme;
    private IUIControllerSchemeActions m_UIControllerSchemeActionsCallbackInterface;
    private readonly InputAction m_UIControllerScheme_Exit;
    private readonly InputAction m_UIControllerScheme_Navigate;
    private readonly InputAction m_UIControllerScheme_Submit;
    private readonly InputAction m_UIControllerScheme_Cancel;
    private readonly InputAction m_UIControllerScheme_Point;
    private readonly InputAction m_UIControllerScheme_Click;
    private readonly InputAction m_UIControllerScheme_ScrollWheel;
    private readonly InputAction m_UIControllerScheme_MiddleClick;
    private readonly InputAction m_UIControllerScheme_RightClick;
    private readonly InputAction m_UIControllerScheme_TrackedDevicePosition;
    private readonly InputAction m_UIControllerScheme_TrackedDeviceOrientation;
    public struct UIControllerSchemeActions
    {
        private @InputActions m_Wrapper;
        public UIControllerSchemeActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Exit => m_Wrapper.m_UIControllerScheme_Exit;
        public InputAction @Navigate => m_Wrapper.m_UIControllerScheme_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIControllerScheme_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIControllerScheme_Cancel;
        public InputAction @Point => m_Wrapper.m_UIControllerScheme_Point;
        public InputAction @Click => m_Wrapper.m_UIControllerScheme_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UIControllerScheme_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIControllerScheme_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIControllerScheme_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UIControllerScheme_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UIControllerScheme_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UIControllerScheme; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControllerSchemeActions set) { return set.Get(); }
        public void SetCallbacks(IUIControllerSchemeActions instance)
        {
            if (m_Wrapper.m_UIControllerSchemeActionsCallbackInterface != null)
            {
                @Exit.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnExit;
                @Exit.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnExit;
                @Exit.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnExit;
                @Navigate.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIControllerSchemeActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_UIControllerSchemeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Exit.started += instance.OnExit;
                @Exit.performed += instance.OnExit;
                @Exit.canceled += instance.OnExit;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public UIControllerSchemeActions @UIControllerScheme => new UIControllerSchemeActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_MKSchemeIndex = -1;
    public InputControlScheme MKScheme
    {
        get
        {
            if (m_MKSchemeIndex == -1) m_MKSchemeIndex = asset.FindControlSchemeIndex("MK");
            return asset.controlSchemes[m_MKSchemeIndex];
        }
    }
    public interface IPlayerControllerSchemeActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRightAnalog(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnHook(InputAction.CallbackContext context);
        void OnDig(InputAction.CallbackContext context);
        void OnLift(InputAction.CallbackContext context);
        void OnBall(InputAction.CallbackContext context);
        void OnGlide(InputAction.CallbackContext context);
        void OnStomp(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMoveObject(InputAction.CallbackContext context);
        void OnThrowObject(InputAction.CallbackContext context);
        void OnPrickle(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnDiary(InputAction.CallbackContext context);
    }
    public interface IUIControllerSchemeActions
    {
        void OnExit(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
}
